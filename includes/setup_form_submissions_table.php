<?php
// Include the database connection file
require_once 'db_connect.php';

echo "<h1>Patient Form Submissions Table Setup Script</h1>";

// SQL to create patient_form_submissions table
$sqlCreateTable = "
CREATE TABLE IF NOT EXISTS patient_form_submissions (
    id INT AUTO_INCREMENT PRIMARY KEY,
    patient_id INT NOT NULL,
    form_name VARCHAR(255) NOT NULL COMMENT 'e.g., cervical.html, basic_info.html',
    form_directory VARCHAR(255) NOT NULL COMMENT 'e.g., patient_evaluation_form, patient_general_info',
    submission_timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    submitted_by_user_id INT NOT NULL,
    form_data JSON NOT NULL COMMENT 'To store all submitted form fields',
    FOREIGN KEY (patient_id) REFERENCES patients(id) ON DELETE CASCADE,
    FOREIGN KEY (submitted_by_user_id) REFERENCES users(id) ON DELETE CASCADE,
    INDEX idx_patient_form_timestamp (patient_id, submission_timestamp DESC),
    INDEX idx_form_name_directory (form_name, form_directory)
)";

if ($mysqli->query($sqlCreateTable)) {
    echo "<p>Patient Form Submissions table created successfully or already exists.</p>";

    // Helper function to check if a column exists
    function columnExists($mysqli, $tableName, $columnName) {
        $sql = "SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS 
                WHERE TABLE_SCHEMA = DATABASE() AND TABLE_NAME = ? AND COLUMN_NAME = ?";
        $stmt = $mysqli->prepare($sql);
        if (!$stmt) {
            echo "<p>Error preparing column check statement: " . htmlspecialchars($mysqli->error) . "</p>";
            return true; // Assume exists to prevent alter attempts on error
        }
        $stmt->bind_param("ss", $tableName, $columnName);
        $stmt->execute();
        $stmt->bind_result($count);
        $stmt->fetch();
        $stmt->close();
        return $count > 0;
    }

    // Helper function to check if an index exists
    function indexExists($mysqli, $tableName, $indexName) {
        $sql = "SHOW INDEX FROM `" . $mysqli->real_escape_string($tableName) . "` WHERE Key_name = ?";
        $stmt = $mysqli->prepare($sql);
        if (!$stmt) {
            echo "<p>Error preparing index check statement: " . htmlspecialchars($mysqli->error) . "</p>";
            return true; // Assume exists to prevent alter attempts on error
        }
        $stmt->bind_param("s", $indexName);
        $stmt->execute();
        $stmt->store_result();
        $count = $stmt->num_rows;
        $stmt->close();
        return $count > 0;
    }

    // Helper function to check if a foreign key constraint exists
    function constraintExists($mysqli, $tableName, $constraintName) {
        $sql = "SELECT COUNT(*) FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS 
                WHERE TABLE_SCHEMA = DATABASE() AND TABLE_NAME = ? AND CONSTRAINT_NAME = ? AND CONSTRAINT_TYPE = 'FOREIGN KEY'";
        $stmt = $mysqli->prepare($sql);
        if (!$stmt) {
            echo "<p>Error preparing constraint check statement: " . htmlspecialchars($mysqli->error) . "</p>";
            return true; // Assume exists to prevent alter attempts on error
        }
        $stmt->bind_param("ss", $tableName, $constraintName);
        $stmt->execute();
        $stmt->bind_result($count);
        $stmt->fetch();
        $stmt->close();
        return $count > 0;
    }

    // Define table name
    $tableName = 'patient_form_submissions';

    // Columns, FKs, and Indexes to check/add
    // Note: Foreign key names might be auto-generated by MySQL if not specified in CREATE TABLE.
    // For robust checking, we'd need to know those names or query them.
    // For this script, we'll define desired names and add if not found by that name.
    $schemaItems = [
        // Columns
        ['type' => 'column', 'name' => 'patient_id', 'definition' => 'INT NOT NULL'],
        ['type' => 'column', 'name' => 'form_name', 'definition' => "VARCHAR(255) NOT NULL COMMENT 'e.g., cervical.html, basic_info.html'"],
        ['type' => 'column', 'name' => 'form_directory', 'definition' => "VARCHAR(255) NOT NULL COMMENT 'e.g., patient_evaluation_form, patient_general_info'"],
        ['type' => 'column', 'name' => 'submission_timestamp', 'definition' => 'TIMESTAMP DEFAULT CURRENT_TIMESTAMP'],
        ['type' => 'column', 'name' => 'submitted_by_user_id', 'definition' => 'INT NOT NULL'],
        ['type' => 'column', 'name' => 'form_data', 'definition' => "JSON NOT NULL COMMENT 'To store all submitted form fields'"],
        
        // Foreign Keys
        // It's good practice to name FK constraints explicitly.
        // If CREATE TABLE did not name them, MySQL assigns names like 'tablename_ibfk_1'.
        // We'll use specific names for our ALTER statements.
        ['type' => 'fk', 'name' => 'fk_submission_patient', 'column' => 'patient_id', 'definition' => "ADD CONSTRAINT fk_submission_patient FOREIGN KEY (patient_id) REFERENCES patients(id) ON DELETE CASCADE"],
        ['type' => 'fk', 'name' => 'fk_submission_user', 'column' => 'submitted_by_user_id', 'definition' => "ADD CONSTRAINT fk_submission_user FOREIGN KEY (submitted_by_user_id) REFERENCES users(id) ON DELETE CASCADE"],
        
        // Indexes
        ['type' => 'index', 'name' => 'idx_patient_form_timestamp', 'columns' => '(patient_id, submission_timestamp DESC)'],
        ['type' => 'index', 'name' => 'idx_form_name_directory', 'columns' => '(form_name, form_directory)'],
    ];

    foreach ($schemaItems as $item) {
        switch ($item['type']) {
            case 'column':
                if (!columnExists($mysqli, $tableName, $item['name'])) {
                    $sqlAlter = "ALTER TABLE `$tableName` ADD COLUMN `" . $item['name'] . "` " . $item['definition'];
                    if ($mysqli->query($sqlAlter)) {
                        echo "<p>Column `" . htmlspecialchars($item['name']) . "` added successfully.</p>";
                    } else {
                        echo "<p>Error adding column `" . htmlspecialchars($item['name']) . "`: " . htmlspecialchars($mysqli->error) . "</p>";
                    }
                } else {
                    echo "<p>Column `" . htmlspecialchars($item['name']) . "` already exists.</p>";
                }
                break;
            
            case 'fk':
                if (!constraintExists($mysqli, $tableName, $item['name'])) {
                    // Ensure the column exists before adding FK
                    if (columnExists($mysqli, $tableName, $item['column'])) {
                        $sqlAlterFK = "ALTER TABLE `$tableName` " . $item['definition'];
                        if ($mysqli->query($sqlAlterFK)) {
                            echo "<p>Foreign Key `" . htmlspecialchars($item['name']) . "` added successfully.</p>";
                        } else {
                            echo "<p>Error adding Foreign Key `" . htmlspecialchars($item['name']) . "`: " . htmlspecialchars($mysqli->error) . "</p>";
                        }
                    } else {
                        echo "<p>Skipping FK `" . htmlspecialchars($item['name']) . "` because column `" . htmlspecialchars($item['column']) . "` is missing.</p>";
                    }
                } else {
                    echo "<p>Foreign Key `" . htmlspecialchars($item['name']) . "` already exists.</p>";
                }
                break;

            case 'index':
                if (!indexExists($mysqli, $tableName, $item['name'])) {
                    // Basic check: ensure primary column for multi-column indexes exists, or first column for single.
                    // More complex checks for all columns in a multi-column index can be added.
                    $firstColumnInIndex = explode(',', str_replace(['(', ')', ' DESC', ' ASC'], '', $item['columns']))[0];
                    if (columnExists($mysqli, $tableName, trim($firstColumnInIndex))) {
                        $sqlAlterIndex = "ALTER TABLE `$tableName` ADD INDEX `" . $item['name'] . "` " . $item['columns'];
                        if ($mysqli->query($sqlAlterIndex)) {
                            echo "<p>Index `" . htmlspecialchars($item['name']) . "` added successfully.</p>";
                        } else {
                            echo "<p>Error adding Index `" . htmlspecialchars($item['name']) . "`: " . htmlspecialchars($mysqli->error) . "</p>";
                        }
                    } else {
                         echo "<p>Skipping Index `" . htmlspecialchars($item['name']) . "` because primary column `" . htmlspecialchars(trim($firstColumnInIndex)) ."` might be missing.</p>";
                    }
                } else {
                    echo "<p>Index `" . htmlspecialchars($item['name']) . "` already exists.</p>";
                }
                break;
        }
    }
    echo "<p>Patient Form Submissions table schema check completed.</p>";

} else {
    echo "<p>Error creating Patient Form Submissions table: " . htmlspecialchars($mysqli->error) . "</p>";
}

// Close the database connection
$mysqli->close();
echo "<p>Patient Form Submissions table setup script finished.</p>";
?>
